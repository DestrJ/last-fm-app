{"version":3,"sources":["config/api.js","reducers/topTracks.js","actions/types.js","reducers/artist.js","reducers/index.js","store.js","components/Header.js","helper/commonHelper.js","components/Track.js","components/Tracks.js","containers/TopTracks.js","actions/boundActions.js","actions/topTracks.js","helper/apiHelper.js","containers/Artist.js","actions/artist.js","components/Main.js","App.js","index.js"],"names":["API_KEY","API_URL","initialState","tracks","loading","page","totalPage","searchQuery","topTracksReducer","state","action","type","totalPages","payload","track","length","slice","totalSearchPage","searchTracks","trackmatches","artist","artistReducer","combineReducers","toptracks","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Header","className","exact","to","getImageFromArray","images","alt","image","Array","isArray","imageUrl","src","Track","trackName","artistName","trackImage","lastFmUrl","artistHtml","artistSlug","replace","href","Tracks","isSearchResult","map","index","key","name","url","TopTracks","props","pageClickHandler","data","selected","boundSetTracksCurrentPage","formOnChangeHandler","event","boundSetTopTracksSearchQuery","target","value","formOnSubmitHandler","preventDefault","boundGetSearchTracks","searchActive","boundGetTracks","this","prevProps","currentPage","onSubmit","placeholder","onChange","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","forcePage","React","Component","connect","limit","dispatch","axios","get","getTopTracksRequestString","then","res","setTracksCurrentPage","searchTrack","getTopTracksSearchRequestString","results","query","setTopTracksSearchString","Artist","match","params","boundGetArtist","tags","tag","bio","content","getArtistRequestString","Main","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ffa00f3.chunk.js","sourcesContent":["export const API_KEY = '5b4fb9f3d727b2d7e8003866267e863a';\nexport const API_URL = 'https://ws.audioscrobbler.com/2.0/';\nexport const TOP_TRACKS_LISTING_LIMIT = 12;\nexport const MAX_TOTAL_PAGES_DEFAULT = 20;\nexport const MAX_TOTAL_PAGES = 830; // if MAX_TOTAL_PAGES = false the limit is removed.","import {\n    TOP_TRACKS_LOADING,\n    TOP_TRACKS_LOADED,\n    SET_TRACKS_CURRENT_PAGE,\n    TOP_TRACKS_SEARCH_LOADED,\n    SET_TOP_TRACKS_SEARCH_STRING\n} from \"../actions/types\";\nimport {\n    TOP_TRACKS_LISTING_LIMIT,\n    MAX_TOTAL_PAGES,\n    MAX_TOTAL_PAGES_DEFAULT\n} from \"../config/api\";\n\nconst initialState = {\n    tracks: null,\n    loading: false,\n    page: 1,\n    totalPage: 20,\n    searchQuery: ''\n};\n\nconst topTracksReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOP_TRACKS_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case TOP_TRACKS_LOADED:\n            let totalPages = MAX_TOTAL_PAGES ? MAX_TOTAL_PAGES : MAX_TOTAL_PAGES_DEFAULT;\n            if ( action.payload['@attr'] && action.payload['@attr'].totalPages ) {\n                totalPages = MAX_TOTAL_PAGES ? MAX_TOTAL_PAGES : Number.parseInt(action.payload['@attr'].totalPages);\n            }\n            const tracks = action.payload.track.length > TOP_TRACKS_LISTING_LIMIT ?\n                action.payload.track.slice(0, TOP_TRACKS_LISTING_LIMIT ) : action.payload.track;\n            return {\n                ...state,\n                loading: false,\n                tracks: tracks,\n                totalPage: totalPages\n            };\n        case SET_TRACKS_CURRENT_PAGE:\n            return {\n                ...state,\n                page: action.page\n            };\n        case TOP_TRACKS_SEARCH_LOADED:\n            const totalSearchResults = action.payload['opensearch:totalResults'];\n            const totalSearchPage = MAX_TOTAL_PAGES ? MAX_TOTAL_PAGES : Math.floor(totalSearchResults / TOP_TRACKS_LISTING_LIMIT);\n            const searchTracks = action.payload.trackmatches.track.length > TOP_TRACKS_LISTING_LIMIT ?\n                action.payload.trackmatches.track.slice(0, TOP_TRACKS_LISTING_LIMIT ): action.payload.trackmatches.track;\n            return {\n                ...state,\n                loading: false,\n                tracks: searchTracks,\n                totalPage: totalSearchPage\n            };\n        case SET_TOP_TRACKS_SEARCH_STRING:\n            return {\n                ...state,\n                searchQuery: action.searchQuery\n            };\n        default:\n            return state;\n    }\n};\n\nexport default topTracksReducer;","export const TOP_TRACKS_LOADING = 'TOP_TRACKS_LOADING';\nexport const TOP_TRACKS_LOADED = 'TOP_TRACKS_LOADED';\nexport const TOP_TRACKS_SEARCH_LOADED = 'TOP_TRACKS_SEARCH_LOADED';\nexport const SET_TOP_TRACKS_SEARCH_STRING = 'SET_TOP_TRACKS_SEARCH_STRING';\nexport const SET_TRACKS_CURRENT_PAGE = 'SET_TRACKS_CURRENT_PAGE';\nexport const ARTIST_LOADING = 'ARTIST_LOADING';\nexport const ARTIST_LOADED = 'ARTIST_LOADED';","import {ARTIST_LOADING, ARTIST_LOADED} from \"../actions/types\";\n\nconst initialState = {\n    loading: false,\n    artist: null\n};\n\nconst artistReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ARTIST_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case ARTIST_LOADED:\n            return {\n                ...state,\n                artist: action.payload,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default artistReducer;","import {combineReducers} from \"redux\";\nimport topTracksReducer from \"./topTracks\";\nimport artistReducer from \"./artist\";\n\nexport default combineReducers({\n    toptracks: topTracksReducer,\n    artist: artistReducer\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers';\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n        // window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport '../assets/header.scss'\n\nconst Header = () => {\n\n    return (\n        <header className=\"page-header\">\n            <nav className=\"page-nav\">\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/\" >Home</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n};\n\nexport default Header;","import React from \"react\";\n\nexport const getImageFromArray = (images, alt) => {\n    let image = '';\n    if (Array.isArray(images) && images.length) {\n        const imageUrl = images[(images.length - 1)]['#text'];\n\n        if ( imageUrl ) {\n            image = (<img src={imageUrl} alt={alt} />);\n        }\n    }\n    return image;\n};","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {getImageFromArray} from \"../helper/commonHelper\";\n\nconst Track = ({trackName, artistName, trackImage, lastFmUrl}) => {\n    const image = getImageFromArray(trackImage, trackName);\n    let artistHtml = '';\n    if ( artistName ) {\n        const artistSlug = '/artist/' + artistName.replace(/ /g, '+');\n        artistHtml = (\n            <h4 className=\"track__artist-link\">\n                <Link to={artistSlug}>{artistName}</Link>\n            </h4>\n        );\n    }\n\n    return (\n        <div className=\"track\">\n            {image}\n            <h3 className=\"track__name\">{trackName}</h3>\n            {artistHtml}\n            <h4 className=\"track__last-fm-link\">\n                <a href={lastFmUrl}>\n                    Last FM\n                </a>\n            </h4>\n        </div>\n    );\n};\n\nexport default Track;","import React from \"react\";\nimport Track from \"./Track\";\n\nconst Tracks = ({tracks, loading, isSearchResult}) => {\n    if ( loading ) {\n        return  <h2>Loading...</h2>;\n    }\n\n    return (\n        <div className=\"tracks-wrapper\">\n            {\n                tracks && tracks.map((track, index) => (\n                    <Track\n                        key={track.name + index}\n                        trackName={track.name}\n                        artistName={isSearchResult ? track.artist : track.artist.name}\n                        trackImage={track.image}\n                        lastFmUrl={isSearchResult ? track.url : track.artist.url}\n                    />\n                ))\n            }\n        </div>\n    );\n};\n\nexport default Tracks;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {\n    boundGetTracks,\n    boundSetTracksCurrentPage,\n    boundGetSearchTracks,\n    boundSetTopTracksSearchQuery\n} from \"../actions/boundActions\";\nimport Tracks from \"../components/Tracks\";\nimport ReactPaginate from 'react-paginate';\nimport '../assets/top-tracks.scss';\n\nclass TopTracks extends React.Component {\n    static propTypes = {\n        tracks: PropTypes.array,\n        loading: PropTypes.bool.isRequired,\n        currentPage: PropTypes.number.isRequired,\n        totalPage: PropTypes.number.isRequired,\n        searchQuery: PropTypes.string.isRequired,\n        boundGetTracks: PropTypes.func.isRequired,\n        boundSetTracksCurrentPage: PropTypes.func.isRequired,\n        boundGetSearchTracks: PropTypes.func.isRequired,\n        boundSetTopTracksSearchQuery: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.searchActive = false;\n    }\n\n    componentDidMount() {\n        this.searchActive = false;\n        this.props.boundGetTracks(1);\n        this.searchActive = false;\n    }\n\n    componentDidUpdate(prevProps) {\n        if ( this.props.searchQuery !== prevProps.currentPage ) {\n            if ( this.props.searchQuery === '' ) {\n                this.searchActive = false;\n            }\n        }\n        if ( (this.props.currentPage !== prevProps.currentPage) ) { //|| (this.props.searchQuery !== prevProps.searchQuery)\n            if ( this.searchActive ) {\n                this.props.boundGetSearchTracks(this.props.currentPage, this.props.searchQuery);\n            } else {\n                this.props.boundGetTracks(this.props.currentPage);\n            }\n        }\n    }\n\n    pageClickHandler = data => {\n        const selected = data.selected + 1;\n        this.props.boundSetTracksCurrentPage(selected);\n    };\n\n    formOnChangeHandler = event => {\n        this.props.boundSetTopTracksSearchQuery(event.target.value);\n    };\n\n    formOnSubmitHandler = event => {\n        event.preventDefault();\n        this.props.boundSetTracksCurrentPage(1);\n        if ( this.props.searchQuery !== '' ) {\n            this.props.boundGetSearchTracks(1, this.props.searchQuery);\n            this.searchActive = true;\n        } else {\n            this.props.boundGetTracks(1);\n        }\n    };\n\n    render() {\n        return (\n            <>\n                <form className=\"search-form\" onSubmit={this.formOnSubmitHandler}>\n                    <input type=\"text\" placeholder=\"Enter search query\" value={this.props.searchQuery} onChange={this.formOnChangeHandler}/>\n                    <button type=\"submit\">Search</button>\n                </form>\n                <h2>{this.searchActive ? 'Search:' : 'Top tracks' }</h2>\n                <ReactPaginate\n                    previousLabel={'previous'}\n                    nextLabel={'next'}\n                    breakLabel={'...'}\n                    breakClassName={'break-me'}\n                    pageCount={this.props.totalPage}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.pageClickHandler}\n                    containerClassName={'pagination'}\n                    subContainerClassName={'pages pagination'}\n                    activeClassName={'active'}\n                    forcePage={this.props.currentPage-1}\n                />\n                <Tracks tracks={this.props.tracks} loading={this.props.loading} isSearchResult={this.searchActive}/>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    tracks: state.toptracks.tracks,\n    loading: state.toptracks.loading,\n    currentPage: state.toptracks.page,\n    totalPage: state.toptracks.totalPage,\n    searchQuery: state.toptracks.searchQuery\n});\n\nexport default connect(mapStateToProps, {boundGetTracks, boundSetTracksCurrentPage, boundGetSearchTracks, boundSetTopTracksSearchQuery})(TopTracks);","import axios from \"axios\";\nimport {\n    getTracks,\n    tracksLoading,\n    setTracksCurrentPage,\n    getTracksSearch,\n    setTopTracksSearchString\n} from \"./topTracks\";\nimport {\n    artistLoading,\n    getArtist\n} from \"./artist\";\nimport {\n    getTopTracksRequestString,\n    getArtistRequestString,\n    getTopTracksSearchRequestString\n} from \"../helper/apiHelper\";\n\nexport const boundGetTracks = (page, limit) => dispatch => {\n    dispatch(tracksLoading());\n\n    axios.get(getTopTracksRequestString(page, limit))\n        .then(res => dispatch(getTracks(res.data.tracks)));\n};\n\nexport const boundGetSearchTracks = (page, searchTrack, limit) => dispatch => {\n    dispatch(tracksLoading());\n\n    axios.get(getTopTracksSearchRequestString(page, searchTrack, limit))\n        .then(res => dispatch(getTracksSearch(res.data.results)));\n};\n\nexport const boundSetTracksCurrentPage = page => dispatch => {\n    dispatch(setTracksCurrentPage(page));\n};\n\nexport const boundSetTopTracksSearchQuery = query => dispatch => {\n    dispatch(setTopTracksSearchString(query));\n};\n\nexport const boundGetArtist = name => dispatch => {\n    dispatch(artistLoading());\n\n    axios.get(getArtistRequestString(name))\n        .then(res => dispatch(getArtist(res.data.artist)));\n};","import {\n    TOP_TRACKS_LOADING,\n    TOP_TRACKS_LOADED,\n    SET_TRACKS_CURRENT_PAGE,\n    TOP_TRACKS_SEARCH_LOADED,\n    SET_TOP_TRACKS_SEARCH_STRING\n} from \"./types\";\n\nexport const tracksLoading = () => ({\n    type: TOP_TRACKS_LOADING\n});\n\nexport const getTracks = tracks => ({\n    type: TOP_TRACKS_LOADED,\n    payload: tracks\n});\n\nexport const setTracksCurrentPage = page => ({\n    type: SET_TRACKS_CURRENT_PAGE,\n    page: page\n});\n\nexport const getTracksSearch = tracks => ({\n    type: TOP_TRACKS_SEARCH_LOADED,\n    payload: tracks\n});\n\nexport const setTopTracksSearchString = query => ({\n    type: SET_TOP_TRACKS_SEARCH_STRING,\n    searchQuery: query\n});","import { API_KEY, API_URL, TOP_TRACKS_LISTING_LIMIT } from \"../config/api\";\n\nexport const getTopTracksRequestString = (page, limit = TOP_TRACKS_LISTING_LIMIT) => {\n    return `${API_URL}?method=chart.gettoptracks&page=${page}&limit=${limit}&api_key=${API_KEY}&format=json`;\n};\n\nexport const getTopTracksSearchRequestString = (page, searchTrack, limit = TOP_TRACKS_LISTING_LIMIT) => {\n    return `${API_URL}?method=track.search&page=${page}&limit=${limit}&track=${searchTrack}&api_key=${API_KEY}&format=json`;\n};\n\nexport const getArtistRequestString = (name) => {\n    return `${API_URL}?method=artist.getinfo&artist=${name}&api_key=${API_KEY}&format=json`;\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {boundGetArtist} from \"../actions/boundActions\";\nimport {getImageFromArray} from \"../helper/commonHelper\";\nimport '../assets/artist.scss'\n\nclass Artist extends React.Component {\n    static propTypes = {\n        artist: PropTypes.object,\n        loading: PropTypes.bool.isRequired,\n        boundGetArtist: PropTypes.func.isRequired\n    };\n\n    componentDidMount() {\n        const artistName = this.props.match && this.props.match.params && this.props.match.params.name;\n        this.props.boundGetArtist(artistName);\n    }\n\n    render() {\n        if (this.props.loading) {\n            return <h2>Loading...</h2>\n        }\n        const artist = this.props.artist != null && this.props.artist;\n\n        if ( artist === false ) {\n            return <h2>This artist does not exists</h2>;\n        }\n\n        const image = getImageFromArray(artist.image, artist.name);\n\n        return (\n            <div className=\"artist\">\n                <h1 className=\"artist__name\">{artist.name}</h1>\n                {image}\n                <ul className=\"artist__tags\">\n                    {\n                        artist.tags && artist.tags.tag.map(tag => (\n                            <li  key={tag.name}>\n                                <a href={tag.url}>{tag.name}</a>\n                            </li>\n                        ))\n                    }\n                </ul>\n                <div className=\"artist__content\">\n                    <p>\n                        {artist.bio && artist.bio.content}\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    artist: state.artist.artist,\n    loading: state.artist.loading\n});\n\nexport default connect(mapStateToProps, {boundGetArtist})(Artist);","import {ARTIST_LOADING, ARTIST_LOADED} from \"./types\";\n\nexport const artistLoading = () => ({\n    type: ARTIST_LOADING\n});\n\nexport const getArtist = artist => ({\n    type: ARTIST_LOADED,\n    payload: artist\n});","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport TopTracks from \"../containers/TopTracks\";\nimport Artist from \"../containers/Artist\";\n\nconst Main = () => {\n    return (\n        <main>\n            <Switch>\n                <Route exact path=\"/\" component={TopTracks} />\n                <Route exact path=\"/artist/:name\" component={Artist} />\n            </Switch>\n        </main>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport './assets/style.scss';\n\nconst App = () => {\n    return (\n        <>\n            <Header />\n            <Main />\n        </>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}